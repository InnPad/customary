@model Custom.Areas.ExtJs.Models.ExtModel
@*Dont't use this, you should use primitive and or complex*@
<script type='text/javascript'>
    Ext.define('Ext.custom.@(Model.Name)', {
        "extends": "Ext.data.Model",
        "fields": [
            @for (var i = 0; i < Model.Fields.Count; i++)
            {
                var field = Model.Fields[i];
                <text>{
                "name": '@(field.Name)',
                "type": '@(field.Type)'@{
                if (field.Default != null)
                {
                    Html.ViewContext.Writer.WriteLine(",");
                    Html.ViewContext.Writer.Write("\"defaultValue\": " + field.Default);
                }
                if (field.Convert != null)
                {
                    Html.ViewContext.Writer.WriteLine(",");
                    Html.ViewContext.Writer.Write("\"convert\": \"" + field.Convert + "\"");
                }
                }
            }</text>if (i + 1 < Model.Fields.Count) { Html.ViewContext.Writer.Write(","); }
            }
        ],
        "associations": [
                    @for (var i = 0; i < Model.Associations.Count; i++)
                    {
                        var association = Model.Associations[i];
                        <text>{
                            "type": "@association.Type",
                            "model": "@association.Model",
                            "primaryKey": "@association.PrimaryKey",
                            "foreignKey": "@association.ForeignKey"
                        }</text>if (i + 1 < Model.Associations.Count)
                        {
                            Html.ViewContext.Writer.Write(",");
                        }
                    }
        ],
        "proxy": {
            "type": "@(Model.Proxy.Type)",
            "api": {
                "create": "@(Model.Proxy.Url)/Create",
                "read": "@(Model.Proxy.Url)/Read",
                "update": "@(Model.Proxy.Url)/Update",
                "destroy": "@(Model.Proxy.Url)/Destroy"
            }
            /* Boolean. True to batch actions of a particular type when synchronizing the store. */
            /* batchActions: "", */

            /* String. Comma-separated ordering 'create', 'update' and 'destroy' actions when batching. */
            /* sourcebatchOrder: "create,update,destroy", */lar

            /* Object. A config object containing one or more event handlers to be added to this object during initialization. */
            /* sourcelisteners: "", */

            /* String/Ext.data.Model. The name of the Model to tie to this Proxy. */
            /* sourcemodel: "", */

            /* Object/String/Ext.data.reader.Reader. The Ext.data.reader.Reader to use to decode the server's response or data read from client. */
            /* sourcereader: "", */

            /* Object/String/Ext.data.writer.Writer. The Ext.data.writer.Writer to use to encode any request sent to the server or saved to client. */
            /* sourcewriter: "" */
        }
    });
</script>

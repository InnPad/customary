@model Custom.Site.Presentation.Sencha.Ext.data.proxy.Proxy
@using Custom.Areas.Metadata.Models
@using Custom.Data.Metadata
@using Custom.Site.Presentation
@using Ext = Custom.Site.Presentation.Sencha.Ext
<script type="text/javascript">
    Ext.define('App.metadata.type.Proxy', function () {
        return {
            extend: 'Ext.data.proxy.Ajax',

            // Use for ajax proxy, since all the create, update and detroy requests will be all POST
            // and for jsonp the api is the same, but the method is GET
            //type: 'ajax', // rest, jsonp or ajax. 
            api: {
                create: '@Url.Absolute("/Metadata/Type/Create")',
                read: '@Url.Absolute("/Metadata/Type/Read")',
                update: '@Url.Absolute("/Metadata/Type/Update")',
                destroy: '@Url.Absolute("/Metadata/Type/Destroy")'
            },
            //url: path,
            headers: {
                "Accept": "application/json"
            },
            listeners: {
                exception: function (proxy, response, operation) {
                    Ext.MessageBox.show({
                        title: 'REMOTE EXCEPTION',
                        msg: operation.getError(),
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.Msg.OK
                    });
                }
            },
            reader: {
                type: "json",
                root: "data",
                totalProperty: 'total',
                successProperty: 'success',
                messageProperty: 'message'
            },
            writer: {
                type: 'json',
                root: 'data',
                allowSingle: false, // force data to be array
                //dateFormat: "",
                writeAllFields: false,
                writeRecordId: true
            }
        };
    });
</script>

@model Custom.Presentation.Sencha.Ext.data.Model
@using Custom.Areas.Metadata.Models
@using Custom.Metadata
@using Custom.Presentation
@using Ext = Custom.Presentation.Sencha.Ext
<script type="text/javascript">
    Ext.define('App.metadata.entity.Model', {
        extend: 'Ext.data.Model',
        requires: [
            'App.metadata.association.Model',
            'App.metadata.property.Model',
            'App.util.Adapter'
        ],
        fields: [
            { name: 'id' },
            { name: 'name' },
            { name: 'namespace' },
            { name: 'title' },
            {
                name: 'titleText',
                persist: false,
                convert: function (value, record) {
                    return App.util.Adapter.text('title', value, record);
                }
            },
            //{ name: 'dep', type: 'auto' },
            //{ name: 'dep_id', type: 'int', mapping: 'dep.dep_id' },
            //{ name: 'dep_Name', type: 'string', mapping: 'dep.dep_Name' },
            { name: 'summary' },
            {
                name: 'summaryText',
                persist: false,
                convert: function (value, record) {
                    return App.util.Adapter.text('summary', value, record);
                }
            },
            { name: 'modifiedBy' },
            {
                name: "modifiedOn",
                type: "date",
                dateFormat: "Y-m-d\\TH:i:s"
            },
            { name: "modifiedAt" },
            { name: "modifiedFor" },
            //{ name: 'members' },
            //{ name: 'associations' }
        ],
        hasMany: [
            { model: 'App.metadata.property.Model', name: 'members' },
            { model: 'App.metadata.association.Model', name: 'associations' }
        ],
        validations: [
            {type: 'presence',  field: 'name'},
            { type: 'length', field: 'name', min: 2 },
            { type: 'presence', field: 'namespace' },
            { type: 'length', field: 'namespace', min: 2 }
            //{type: 'inclusion', field: 'gender',   list: ['Male', 'Female']},
            //{type: 'exclusion', field: 'username', list: ['Admin', 'Operator']},
            //{type: 'format',    field: 'username', matcher: /([a-z]+)[0-9]{2,3}/}
        ]/*,
        proxy: 'App.metadata.entity.Proxy'*/
    });
</script>

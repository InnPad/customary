@using Custom.Areas.Metadata.Models
@using Custom.Metadata
@using Custom.Presentation
@using Ext = Custom.Presentation.Sencha.Ext
@{
    if (Model is Entity)
    {
        /*Html.Render((Ext.data.Model)Model);
        Html.Render((Ext.data.Store)Model);
        Html.Render((Ext.data.proxy.Proxy)Model);
        Html.Render((Ext.grid.Panel)Model);
        Html.Render((Ext.form.Panel)Model);*/

        Html.Render(Entity.Handlers.OnClick);
        Html.Render(Entity.Handlers.OnMouseMove);
        Html.Render(Entity.Handlers.OnMouseUp);
        
    <script type="text/javascript">
        Ext.Loader.setPath('Ext', '@Url.Absolute("/Scripts/Ext")');
        Ext.Loader.setPath('App', '@Url.Absolute()');
    </script>
        
        
    <script type="text/javascript">
        Ext.onReady(function () {

            var form = Ext.create('App.metadata.entity.Form', {
                border: false,
                activeRecord: null,
                //iconCls: 'icon-user',
                frame: false,
                defaultType: 'textfield',
                bodyPadding: 5,

                fieldDefaults: {
                    anchor: '100%',
                    labelAlign: 'right'
                },

                defaultAnchor: "100%"
            });

            var writer = Ext.create('Ext.data.writer.Json', {
                root: 'data',
                allowSingle: false, // force data to be array
                //dateFormat: "",
                writeAllFields: false,
                writeRecordId: true,
                getRecordData: function (record) {
                    return {
                        'id': record.data.id,
                        'Name': record.data.Name,
                        'Tittle': record.data.Title,
                        'Summary': record.data.Summary
                    };
                }
            });

            Ext.create('Ext.container.Viewport', {
                layout: 'border',
                items: [{
                    region: 'north',
                    html: '<h1 class="x-panel-header">@ViewBag.Title</h1>',
                    autoHeight: true,
                    border: false,
                    margins: '0 0 5 0'
                }, {
                    region: 'west',
                    collapsible: true,
                    title: 'Navigation',
                    width: 150
                    // could use a TreePanel or AccordionLayout for navigational items
                }, {
                    region: 'south',
                    title: 'South Panel',
                    collapsible: true,
                    html: 'Information goes here',
                    split: true,
                    height: 100,
                    minHeight: 100
                }, /*{
                    region: 'east',
                    title: 'East Panel',
                    collapsible: true,
                    split: true,
                    width: 150
                }*/ form, Ext.create('App.metadata.entity.Grid', {
                    region: 'center'
                })/*{
                    region: 'center',
                    xtype: 'tabpanel', // TabPanel itself has no title
                    activeTab: 0,      // First tab active by default
                    items: {
                        title: 'Default Tab',
                        html: 'The first tab\'s content. Others may be added dynamically'
                    }
                }*/]
            });
        });
    </script>
    }
    else if (Model is Entity.Handlers)
    {
        switch ((Entity.Handlers)Model)
        {
            case Entity.Handlers.OnClick:
                // 
                //
    <script type="text/javascript">
        function onClick() {
        }
    </script>
                break;

            case Entity.Handlers.OnMouseMove:
                //
                //
    <script type="text/javascript">
        function onMouseMove() {
        }
    </script>
                break;

            case Entity.Handlers.OnMouseUp:
                //
                //
    <script type="text/javascript">
        function onMouseUp() {
        }
    </script>
                break;
        }
    }
    if (Model is Ext.data.Model)
    {
        var model = Model as Ext.data.Model;
    <script type="text/javascript">
        Ex.Define('App.metadata.entity.Model', @((model as Scriptable).Result())
            );
    </script>
    }
    else if (Model is Ext.data.Store)
    {
        var model = Model as Ext.data.Model;
    <script type="text/javascript">
        Ex.Define('App.metadata.entity.Model', @((model as Scriptable).Result())
            );
    </script>
    }
}
@model Custom.Presentation.Sencha.Ext.form.Panel
@using Custom.Areas.Metadata.Models
@using Custom.Metadata
@using Custom.Presentation
@using Ext = Custom.Presentation.Sencha.Ext
<script type="text/javascript">
    Ext.define('App.metadata.entity.Form', function () {

        return {
            extend: 'Ext.form.Panel',
            //alias: 'widget.writerform',

            requires: [
                'Ext.form.field.Text',
                'App.core.Adapter',
                'App.metadata.entity.Model'
            ],

            initComponent: function () {

                Ext.apply(this, {
                    frame: true,
                    //bodyStyle: 'padding:5px 5px 0',
                    layout: 'column',
                    defaults: {
                        bodyPadding: 4
                    },
                    fieldDefaults: {
                        anchor: '100%',
                        labelAlign: 'right'
                    },
                    items: [
                        {
                            xtype: 'fieldset',
                            columnWidth: 0.5,
                            border: false,
                            collapsible: false,
                            defaultType: 'textfield',
                            defaults: { anchor: '100%' },
                            layout: 'anchor',
                            items: [
                                {
                                    allowBlank: false,
                                    fieldLabel: "Title",
                                    name: "titleText"
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            columnWidth: 0.5,
                            border: false,
                            collapsible: false,
                            defaultType: 'textfield',
                            defaults: { anchor: '100%' },
                            layout: 'anchor',
                            items: [
                                {
                                    cls: 'x-item-disabled', // simulate disabled; submitted
                                    fieldLabel: "Version",
                                    name: "version",
                                    readOnly: true,
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            columnWidth: 1,
                            border: false,
                            collapsible: false,
                            defaultType: 'textfield',
                            defaults: { anchor: '100%' },
                            layout: 'anchor',
                            items: [
                                {
                                    fieldLabel: "Summary",
                                    name: "summaryText",
                                    xtype: "textarea",
                                }
                            ]
                        }
                    ]
                });

                this.callParent();

            },

            onSelectionChange: function (selModel, selections) {
                if (typeof selections === 'object' && selections.length === 1) {
                    this.setRecord(selections[0]);
                } else {
                    this.setRecord(null);
                }
            },

            setRecord: function (record) {

                var form = this.getForm();

                if (form.isDirty() && form.isValid() && !!this.record) {
                    form.updateRecord(this.record);
                }

                this.record = null;

                form.reset();

                if (typeof record === 'object') {
                    this.record = record;
                    form.loadRecord(this.record);
                    this.updateButton.enable();
                } else {
                    this.updateButton.disable();
                }
            },
        }
    });
</script>
